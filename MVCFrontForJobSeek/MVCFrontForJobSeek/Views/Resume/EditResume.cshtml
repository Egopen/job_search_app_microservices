@model MVCFrontForJobSeek.Controllers.ResumeController.UpdateResumeRequest

@{
    ViewBag.Title = "Редактировать резюме";
}

<h2>Редактировать резюме</h2>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<form asp-action="EditResume" method="post">
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <label for="Desc">Описание</label>
        <textarea class="form-control" id="Desc" name="Desc" placeholder="Описание">@Model.Desc</textarea>
    </div>

    <div class="form-group">
        <label for="Mobile_phone">Мобильный телефон</label>
        <input type="text" class="form-control" id="Mobile_phone" name="Mobile_phone" value="@Model.Mobile_phone" placeholder="Мобильный телефон" />
    </div>

    <div class="form-group">
        <label for="Name">Имя</label>
        <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" placeholder="Имя" />
    </div>

    <div class="form-group">
        <label for="City">Город</label>
        <input type="text" class="form-control" id="City" name="City" value="@Model.City" placeholder="Город" />
    </div>

    <div class="form-group">
        <label for="Job_name">Название должности</label>
        <input type="text" class="form-control" id="Job_name" name="Job_name" value="@Model.Job_name" placeholder="Название должности" />
    </div>

    <div class="form-group">
        <label for="Salary">Зарплата</label>
        <input type="number" class="form-control" id="Salary" name="Salary" value="@Model.Salary" placeholder="Зарплата" />
    </div>

    <div class="form-group">
        <label for="StatusId">Статус</label>
        <select class="form-control" id="status" name="StatusId">
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Сохранить изменения</button>
    <a href="@Url.Action("SelfDetailsResume", new { id = Model.Id })" class="btn btn-secondary">Отмена</a>
</form>

<script>
    document.addEventListener("DOMContentLoaded", async function () {
        try {
            // Получаем список статусов
            const response = await fetch('http://localhost:8080/gateway/JobSeeker/Status/GetAllStatuses');
            if (response.ok) {
                const statuses = await response.json();
                const statusSelect = document.getElementById("status");

                // Добавляем каждый статус в выпадающий список
                statuses.forEach(status => {
                    const option = document.createElement("option");
                    option.value = status.id;
                    option.textContent = status.desc;

                    // Если текущий статус совпадает с одним из доступных, выбираем его
                    if (status.id === @Model.StatusId) {
                        option.selected = true;
                    }

                    statusSelect.appendChild(option);
                });
            } else {
                alert("Ошибка загрузки статусов.");
            }
        } catch (error) {
            console.error("Ошибка при загрузке статусов:", error);
        }
    });
</script>
